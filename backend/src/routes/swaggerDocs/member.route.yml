swagger: "2.0"
info:
  version: "1.0.0"
  title: Members API
basePath: /
schemes:
  - http
tags:
  - name: Members Routes
    description: Endpoints for managing members
paths:
  /members:
    post:
      tags:
        - Members Routes
      summary: Create a new member
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Member object
          required: true
          schema:
            $ref: "#/definitions/Member"
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/Member"
        400:
          description: Bad request
      examples:
        sample:
          value:
            memberType: "Regular"
            surname: "Doe"
            givenName: "John"
            birthDate: "1990-01-01"
            birthPlace: "New York"
            nationality: "American"
            fatherName:
              surname: "Doe"
              givenName: "Michael"
            motherName:
              surname: "Doe"
              givenName: "Jane"
            spouseName:
              surname: "Smith"
              givenName: "Alice"
            education:
              nameOfInstitute: "University of XYZ"
              course: "Computer Science"
              yearFrom: 2010
              yearTo: 2014
            joiningDate: "2024-03-12"
            address:
              line1: "123 Main Street"
              line2: "Apt 101"
              line3: "Anytown"
            documents:
              identity: "ID123456"
              memberCertificate: "MC789012"
              other:
                additionalDocument: "Additional Doc"
            otherInfo:
              additionalInfo: "Additional Info"
    get:
      tags:
        - Members Routes
      summary: Retrieve all members
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Member"
        500:
          description: Internal server error
  /members/{id}:
    get:
      tags:
        - Members Routes
      summary: Retrieve a single member by ID
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Member"
        404:
          description: Member not found
        500:
          description: Internal server error
    put:
      tags:
        - Members Routes
      summary: Update a member by ID
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          description: Member object
          required: true
          schema:
            $ref: "#/definitions/Member"
      responses:
        200:
          description: Updated
          schema:
            $ref: "#/definitions/Member"
        404:
          description: Member not found
        400:
          description: Bad request
        500:
          description: Internal server error
    delete:
      tags:
        - Members Routes
      summary: Delete a member by ID
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        200:
          description: Deleted
          schema:
            $ref: "#/definitions/Member"
        404:
          description: Member not found
        500:
          description: Internal server error
definitions:
  Member:
    type: object
    properties:
      memberType:
        type: string
      surname:
        type: string
      givenName:
        type: string
      birthDate:
        type: string
        format: date
      birthPlace:
        type: string
      nationality:
        type: string
      fatherName:
        type: object
        properties:
          surname:
            type: string
          givenName:
            type: string
      motherName:
        type: object
        properties:
          surname:
            type: string
          givenName:
            type: string
      spouseName:
        type: object
        properties:
          surname:
            type: string
          givenName:
            type: string
      education:
        type: object
        properties:
          nameOfInstitute:
            type: string
          course:
            type: string
          yearFrom:
            type: integer
          yearTo:
            type: integer
      joiningDate:
        type: string
        format: date
      address:
        type: object
        properties:
          line1:
            type: string
          line2:
            type: string
          line3:
            type: string
      documents:
        type: object
        properties:
          identity:
            type: string
          memberCertificate:
            type: string
          other:
            type: object
      otherInfo:
        type: object
